FROM php:8.2-fpm

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    libzip-dev \
    sqlite3 \
    libsqlite3-dev

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg
RUN docker-php-ext-install pdo_mysql pdo_sqlite mbstring exif pcntl bcmath gd zip

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www

# Copy application files (includes public/assets/)
COPY . .

# Copy environment file for production
COPY .env.render .env

# Install PHP dependencies
RUN composer install --optimize-autoloader --no-dev --ignore-platform-reqs

# Generate application key
RUN php artisan key:generate --force

# Create SQLite database file
RUN touch database/database.sqlite

# Clear all caches first
RUN php artisan config:clear
RUN php artisan cache:clear
RUN php artisan route:clear
RUN php artisan view:clear

# Run database migrations
RUN php artisan migrate --force

# Cache config and routes for production
RUN php artisan config:cache
RUN php artisan route:cache

# Create storage link
RUN php artisan storage:link

# Fix permissions (only public directory)
RUN chmod -R 775 storage bootstrap/cache database public
RUN chown -R www-data:www-data storage bootstrap/cache database public

EXPOSE 10000
CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=10000"]