services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ahmedbenhmida/ecoevents-app:latest  # Changed to match Jenkinsfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
       #- ./:/var/www
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    networks:
      - laravel_network
    depends_on:
      - db
      - redis

  webserver:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    image: ahmedbenhmida/ecoevents-nginx:latest  # Changed to match Jenkinsfile
    container_name: laravel_webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
       #- ./:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel_network

  db:
    image: mysql:8.0
    container_name: laravel_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-laravel}
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel_network

  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel_network

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_queue
    restart: unless-stopped
    working_dir: /var/www
    command: bash -c "php artisan queue:work --sleep=3 --tries=3"
    depends_on:
      - app
      - db
      - redis
    networks:
      - laravel_network

volumes:
  dbdata:

networks:
  laravel_network:
    driver: bridge